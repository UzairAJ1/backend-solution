// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  Admin
  User
}

model Project {
 id          Int         @id @default(autoincrement())
 name        String
 description String?
 createdAt   DateTime    @default(now())
 projectUsers ProjectUser[]
 tasks       Task[]
}

model ProjectUser {
 projectId Int
 userId    Int
 project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
 user      User    @relation(fields: [userId], references: [id])

 @@id([projectId, userId])
}

model User {
 id          Int         @id @default(autoincrement())
 username    String      @unique
 email       String      @unique
 password    String
 role        Role        @default(User)
 createdAt   DateTime    @default(now())
 projects    ProjectUser[]
 tasks       Task[]
}

model Task {
 id          Int       @id @default(autoincrement())
 title       String
 description String?
 dueDate     DateTime?
 completed   Boolean   @default(false)
 createdAt   DateTime @default(now())
 projectId   Int
project     Project   @relation(fields: [projectId], references: [id], onDelete: Cascade)
 userId      Int?
 user        User?     @relation(fields: [userId], references: [id])
files File[]
}

model File {
  id        Int     @id @default(autoincrement())
  filename  String
  taskId    Int
  path      String
  task      Task    @relation(fields: [taskId], references: [id])
}